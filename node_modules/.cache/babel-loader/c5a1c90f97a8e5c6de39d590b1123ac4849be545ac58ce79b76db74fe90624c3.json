{"ast":null,"code":"var _jsxFileName = \"/Users/daviddaillere/Documents/Studies/course/Codecademy/projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js\";\nimport React from \"react\";\nimport { ContactPicker } from '../contactPicker/ContactPicker';\n\n//get today's date as a String to implement min Date\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nconst minDate = getTodayString();\nexport const AppointmentForm = _ref => {\n  let {\n    contacts,\n    appointment,\n    setAppointment,\n    handleSubmit\n  } = _ref;\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const {\n      name,\n      value\n    } = target;\n    setAppointment(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  //ceate an arrays of all names extracted from the contacts object set in App.js\n  const contactNames = [];\n  contacts === null || contacts === void 0 ? void 0 : contacts.map(contact => contactNames.push(contact.name));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: appointment.title,\n        onChange: handleChange,\n        placeholder: \"name\",\n        \"aria-label\": \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: minDate,\n        name: \"date\",\n        value: appointment.date,\n        onChange: handleChange,\n        placeholder: \"date\",\n        \"aria-label\": \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"time\",\n        value: appointment.time,\n        onChange: handleChange,\n        placeholder: \"time\",\n        \"aria-label\": \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n        contacts: contactNames,\n        onChange: handleChange,\n        appointment: appointment.contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","ContactPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","minDate","AppointmentForm","_ref","contacts","appointment","setAppointment","handleSubmit","handleChange","_ref2","target","name","value","prev","contactNames","map","contact","push","children","onSubmit","type","title","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","min","date","time","_c","$RefreshReg$"],"sources":["/Users/daviddaillere/Documents/Studies/course/Codecademy/projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\r\nimport {ContactPicker} from '../contactPicker/ContactPicker';\r\n\r\n//get today's date as a String to implement min Date\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\nconst minDate= getTodayString();\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  appointment,\r\n  setAppointment,\r\n  handleSubmit\r\n}) => {\r\n\r\n\r\n  const handleChange=({target})=>{\r\n    const {name, value}= target;\r\n    setAppointment((prev)=>({\r\n       ...prev, [name]: value\r\n    }));\r\n  }\r\n \r\n//ceate an arrays of all names extracted from the contacts object set in App.js\r\nconst contactNames= [];\r\ncontacts?.map(contact => contactNames.push(contact.name));\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <form\r\n    onSubmit = {handleSubmit}>\r\n      <input\r\n      type='text'\r\n      name='title'\r\n      value= {appointment.title}\r\n      onChange={handleChange}\r\n      placeholder=\"name\"\r\n      aria-label=\"name\"\r\n      />\r\n      <input\r\n      type='date'\r\n      min={minDate}\r\n      name='date'\r\n      value= {appointment.date}\r\n      onChange={handleChange}\r\n      placeholder=\"date\"\r\n      aria-label=\"date\"\r\n      />\r\n      <input\r\n      type='time'\r\n      name='time'\r\n      value= {appointment.time}\r\n      onChange={handleChange}\r\n      placeholder=\"time\"\r\n      aria-label=\"time\"\r\n      />\r\n      <ContactPicker \r\n        contacts={contactNames}\r\n        onChange={handleChange}\r\n        appointment={appointment.contact}>\r\n      </ContactPicker>\r\n\r\n      <input type=\"submit\" value=\"Add\" />\r\n      \r\n    </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}