{"ast":null,"code":"var _jsxFileName = \"/Users/daviddaillere/Documents/Studies/course/Codecademy/projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js\";\nimport React from \"react\";\nimport { ContactPicker } from '../contactPicker/ContactPicker';\n\n//get today's date as a String to implement min Date\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nconst minDate = getTodayString();\nexport const AppointmentForm = _ref => {\n  let {\n    contacts,\n    appointment,\n    setAppointment,\n    handleSubmit\n  } = _ref;\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    setappointment(prev => ({}));\n  };\n  const handleTimeChange = _ref3 => {\n    let {\n      target\n    } = _ref3;\n    setTime(target.value);\n  };\n  const handleDateChange = _ref4 => {\n    let {\n      target\n    } = _ref4;\n    setDate(target.value);\n  };\n  const handleContactChange = _ref5 => {\n    let {\n      target\n    } = _ref5;\n    setContact(target.value);\n  };\n  const contactNames = [];\n  contacts === null || contacts === void 0 ? void 0 : contacts.map(contact => contactNames.push(contact.name));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: handleTitleChange,\n        placeholder: \"name\",\n        \"aria-label\": \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: minDate,\n        value: date,\n        onChange: handleDateChange,\n        placeholder: \"date\",\n        \"aria-label\": \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: time,\n        onChange: handleTimeChange,\n        placeholder: \"time\",\n        \"aria-label\": \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n        contacts: contactNames,\n        onChange: handleContactChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","ContactPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","minDate","AppointmentForm","_ref","contacts","appointment","setAppointment","handleSubmit","handleChange","_ref2","target","setappointment","prev","handleTimeChange","_ref3","setTime","value","handleDateChange","_ref4","setDate","handleContactChange","_ref5","setContact","contactNames","map","contact","push","name","children","onSubmit","type","title","onChange","handleTitleChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","min","date","time","_c","$RefreshReg$"],"sources":["/Users/daviddaillere/Documents/Studies/course/Codecademy/projects/appointment-planner-starting-v18/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\r\nimport {ContactPicker} from '../contactPicker/ContactPicker';\r\n\r\n//get today's date as a String to implement min Date\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\nconst minDate= getTodayString();\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  appointment,\r\n  setAppointment,\r\n  handleSubmit\r\n}) => {\r\n\r\n  const handleChange=({target})=>{\r\n    setappointment((prev)=>({\r\n      \r\n    }))\r\n  }\r\n  const handleTimeChange=({target})=>{\r\n    setTime(target.value)\r\n  }\r\n  const handleDateChange=({target})=>{\r\n    setDate(target.value)\r\n  }\r\n  const handleContactChange=({target})=>{\r\n    setContact(target.value)\r\n  }\r\n\r\nconst contactNames= [];\r\ncontacts?.map(contact => contactNames.push(contact.name));\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <form\r\n    onSubmit = {handleSubmit}>\r\n      <input\r\n      type='text'\r\n      value= {title}\r\n      onChange={handleTitleChange}\r\n      placeholder=\"name\"\r\n      aria-label=\"name\"\r\n      />\r\n      <input\r\n      type='date'\r\n      min={minDate}\r\n      value= {date}\r\n      onChange={handleDateChange}\r\n      placeholder=\"date\"\r\n      aria-label=\"date\"\r\n      />\r\n      <input\r\n      type='time'\r\n      value= {time}\r\n      onChange={handleTimeChange}\r\n      placeholder=\"time\"\r\n      aria-label=\"time\"\r\n      />\r\n      <ContactPicker \r\n        contacts={contactNames}\r\n        onChange={handleContactChange}>\r\n      </ContactPicker>\r\n\r\n      <input type=\"submit\" value=\"Add\" />\r\n      \r\n    </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}